#!/bin/bash

set -u
DIR="."
GetPathToCurrentlyExecutingScript () {
    # Absolute path of this script, e.g. /opt/corda/node/foo.sh
    set +e
    ABS_PATH=$(readlink -f "$0" 2>&1)
    if [ "$?" -ne "0" ]; then
        echo "Using macOS alternative to readlink -f command..."
        # Unfortunate MacOs issue with readlink functionality, see https://github.com/corda/corda-kubernetes-deployment/issues/4
        TARGET_FILE=$0

        cd $(dirname $TARGET_FILE)
        TARGET_FILE=$(basename $TARGET_FILE)
        ITERATIONS=0

        # Iterate down a (possible) chain of symlinks
        while [ -L "$TARGET_FILE" ]
        do
            TARGET_FILE=$(readlink $TARGET_FILE)
            cd $(dirname $TARGET_FILE)
            TARGET_FILE=$(basename $TARGET_FILE)
            ITERATIONS=$((ITERATIONS + 1))
            if [ "$ITERATIONS" -gt 1000 ]; then
                echo "symlink loop. Critical exit."
                exit 1
            fi
        done

        # Compute the canonicalized name by finding the physical path 
        # for the directory we're in and appending the target file.
        PHYS_DIR=$(pwd -P)
        ABS_PATH=$PHYS_DIR/$TARGET_FILE
    fi

    # Absolute path of the directory this script is in, thus /opt/corda/node/
    DIR=$(dirname "$ABS_PATH")
}
GetPathToCurrentlyExecutingScript

set -eu
function main() {
    SERVER="{{.Values.config.containerRegistry.serverAddress}}"
    USERNAME="{{ .Values.config.containerRegistry.username }}"
    PASSWORD="{{ .Values.config.containerRegistry.password }}"
    EMAIL="{{ .Values.config.containerRegistry.email }}"

    {{- if eq .Values.config.containerRegistry.username "AWS" }}
    PASSWORD=$(aws ecr get-login-password)
    {{- end }}

    kubectl create secret docker-registry --dry-run=true container-registry-secret \
    --docker-server=$SERVER \
    --docker-username=$USERNAME \
    --docker-password=$PASSWORD \
    --docker-email=$EMAIL \
    -o yaml > $DIR/docker-secret.yml
}
main
