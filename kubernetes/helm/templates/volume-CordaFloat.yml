{{- if .Values.setup.cordaFirewall.destination.internalKubernetesCluster.enabled }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Values.config.resourceName }}-float-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.config.storage.resourceName }}
  volumeName: {{ .Values.config.resourceName }}-float-pv-volume
  resources:
    requests:
      storage: {{ .Values.config.storage.float.size }}
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ .Values.config.resourceName }}-float-pv-volume
spec:
  storageClassName: {{ .Values.config.storage.resourceName }}
  capacity:
    storage: {{ .Values.config.storage.float.size }}
  accessModes:
    - ReadWriteOnce
{{- if .Values.config.storage.azureFile.enabled }}
  azureFile:
    secretName: {{ .Values.config.storage.resourceName }}-secret
    shareName: {{ .Values.config.storage.float.fileShareName }}
    readOnly: false
  mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
{{- else if .Values.config.storage.gcpPD.enabled }}
  gcePersistentDisk:
    pdName: "{{ .Values.config.storage.float.volumeId }}"
    fsType: "{{ .Values.config.storage.gcpPD.fsType }}"
{{- else if .Values.config.storage.awsEBS.enabled }}
  awsElasticBlockStore:
    volumeID: "{{ .Values.config.storage.float.volumeId }}"
    fsType: "{{ .Values.config.storage.awsEBS.fsType }}"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.config.storage.node.volumeHost }}
{{- end }}
{{- end }}
